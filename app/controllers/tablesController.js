// Generated by CoffeeScript 2.3.1
(function() {
  var Controller, Db, TC, locomotive, primary, snapshot,
    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };

  locomotive = require('locomotive');

  Controller = locomotive.Controller;

  Db = require('../db');

  primary = new Db("primary", "E:\\ResMgr\\amdex\\resmanager", "AERLINGUS");

  snapshot = new Db("snapshot", "E:\\ResMgr\\amdex\\resmanager_snapshot");

  TC = class TC extends Controller {
    constructor() {
      super();
      this.showAll = this.showAll.bind(this);
      this.show = this.show.bind(this);
      // not really much value in assigning them here - BUT do not recreate the objects - lose data!!
      this.primary = primary;
      this.snapshot = snapshot;
    }

    // this needs to run to load the table data
    index() {
      console.log("TC.index()");
      return this.primary.getFields(this.showAll);
    }

    showAll() {
      boundMethodCheck(this, TC);
      console.log("TC.showAll()");
      this.title = "Tables in Database";
      // have to convert to array!! Can't iterate over objects apparently!!
      this.tables = Object.values(this.primary.tables); // locomotive filters all properties existing prior to action !!
      return this.render();
    }

    show() { // fat cos called statically
      boundMethodCheck(this, TC);
      console.log("TC.show()");
      this.tableName = this.params('name');
      this.table = this.primary.getTable(this.tableName);
      this.render();
      return console.log("Rendered");
    }

    scan() {}

  };

  module.exports = TC;

}).call(this);

//# sourceMappingURL=tablesController.js.map
