{
  "version": 3,
  "file": "tablesController.js",
  "sourceRoot": "",
  "sources": [
    "tablesController.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "locomotive = require('locomotive')\r\nController = locomotive.Controller\r\n\r\nDb = require('../db')\r\njade = require 'jade'\r\n\r\nprimary = new Db \"primary\" , \"E:\\\\ResMgr\\\\amdex\\\\resmanager\" , \"AERLINGUS\"\r\nsnapshot = new Db \"snapshot\" , \"E:\\\\ResMgr\\\\amdex\\\\resmanager_snapshot\"\r\n\r\n\r\nclass TC extends Controller\r\n\r\n  constructor : ->\r\n    console.log \"TC.constructor()\"\r\n    super()\r\n    # not really much value in assigning them here - BUT do not recreate the objects - lose data!!\r\n    @primary = primary\r\n    @snapshot = snapshot\r\n\r\n  exrender : (name,tmpl) ->\r\n    # this needs to send precompiled jade templates to the browser\r\n\r\n    fn = jade.compileClient(tmpl , {name : name })\r\n\r\n    # include in the output\r\n    @templates[name] = fn\r\n\r\n    @super(name)\r\n\r\n\r\n  # this needs to run to load the table data\r\n  index : ->\r\n    console.log \"TC.index()\"\r\n    @primary.getFields()  # should possibly change this over to load meta for each file - not fields file\r\n      .then =>\r\n        @showAll()\r\n\r\n  showAll : =>\r\n    console.log \"TC.showAll() - live reload? NO!! Oh!! Yes!!\"\r\n    @title=\"Tables in Database\"\r\n    # have to convert to array!! Can't iterate over objects apparently!!\r\n    @tables=Object.values(@primary.tables) # locomotive filters all properties existing prior to action !!\r\n    @render()\r\n\r\n  countAll : ->\r\n    promises=[]\r\n    for k,table of @primary.tables  # obj not array\r\n      promises.push table.getCount()\r\n\r\n    Promise.all(promises)\r\n      .then =>\r\n        @showAll()\r\n  # note these method ALL take table as a parameter\r\n  # any way to standardise these api calls??\r\n  count : =>\r\n    console.log \"TC.count()\"\r\n    @tableName = @params('name')\r\n    @table = @primary.getTable @tableName\r\n    @table.getCount()\r\n      .then =>  # fat @\r\n        @render('show')\r\n        console.log \"count Rendered\"\r\n\r\n  show : => # fat cos called statically\r\n      console.log \"TC.show()\"\r\n      @tableName = @params('name')\r\n      @table = @primary.getTable @tableName\r\n      @table.getData()\r\n        .then =>  # fat @\r\n          @render()\r\n          console.log \"show Rendered\"\r\n\r\n  scan : ->\r\n\r\n  # reads the records to a cache\r\n  read : ->\r\n    console.log \"TC.read()\"\r\n    @tableName = @params('name')\r\n    @table = @primary.getTable @tableName\r\n    @table.adodbGetData()\r\n      .then => # fat @\r\n        @render \"show\"\r\n\r\n  # reads the records to a cache\r\n  inserts : ->\r\n    console.log \"TC.inserts()\"\r\n    @tableName = @params('name')\r\n    @table = @primary.getTable @tableName\r\n    @primary.query \"SELECT * FROM #{@table.name} WHERE #{@table.primaryKey}  NOT IN (SELECT record_id FROM #{snapshot.path}.changes WHERE table_id = #{@table.id});\"\r\n      .then (data) =>\r\n        console.log \"Got data\"\r\n        @table.data = data;\r\n        @render \"show\"\r\n\r\n  meta : ->\r\n    console.log \"TC.inserts()\"\r\n    @tableName = @params('name')\r\n    @table = @primary.getTable @tableName\r\n    @table.meta()\r\n      .then =>\r\n        @table.getData()\r\n      .then =>\r\n        @render \"show\"\r\n\r\nmodule.exports=TC"
  ]
}