{
  "version": 3,
  "file": "db.js",
  "sourceRoot": "",
  "sources": [
    "db.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "ADODB = require('node-adodb');\r\nJsonCache = require \"./utils\"\r\n\r\n# ADO constants\r\nadodb =\r\n  schemaEnum :\r\n    columns : 4\r\n    indexes : 12\r\n    procedures : 16\r\n    tables : 20\r\n    providerTypes : 22\r\n    views : 23\r\n    foreignKeys : 27\r\n    primaryKeys : 28\r\n    members : 38\r\n\r\n  typeEnum :\r\n    empty : 0\r\n    smallInt : 2\r\n    integer : 3     # default number/autonumber 10 places\r\n    single : 4\r\n    double : 5\r\n    currency : 6\r\n    date : 7\r\n    bstr : 8\r\n    idispatch : 9\r\n    error : 10\r\n    boolean : 11\r\n    variant : 12\r\n    iunknown : 13\r\n    decimal : 14\r\n    tinyInt : 15\r\n    unsignedTinyInt : 16\r\n    wchar : 130   # unicode string\r\n\r\n\r\n\r\nclass Db\r\n  constructor : (@name,@path,@password,@ext=\".mdb\") ->\r\n    @passString = \"\"\r\n    @passString = \"Jet OLEDB:Database Password=#{@password}\" if @password?\r\n    @file = @path + @ext\r\n    @provider = 'Provider=Microsoft.ACE.OLEDB.12.0'\r\n    @dataSource = \"Data Source=#{@file}\"\r\n    @connected = false;\r\n    # the cache should really be bound to a method or property/getter - later\r\n    @cacheTables = new JsonCache \"storage/db/#{@name}/\" , \"adodb-table-list\" , @adodbGetTables , @adodbTablesReceived\r\n    @cacheFields = new JsonCache \"storage/db/#{@name}/\" , \"tables\" , @adodbGetFields , @adodbFieldsReceived\r\n\r\n  connect : ->\r\n    cnnString = \"#{@provider};#{@dataSource};#{@passString}\"\r\n    @cnn = ADODB.open cnnString\r\n    @connected=true;\r\n\r\n  getTable : (name) ->\r\n    console.log \"table [#{name} not found in database.tables\" if not @tables[name]?\r\n    table = @tables[name]\r\n\r\n    # actually already have the data below!! but should really allow the cache to play with it before using it\r\n  adodbTablesReceived : (@tableList) =>  # @ in promise/cb\r\n    # this is not indexed!\r\n    #    @tables = @tableList.map (tableName) => # @ inside cb\r\n    #      new Table(@,tableName)\r\n    @tables = {}\r\n    for tablename in @tableList\r\n      table = new Table @,tablename\r\n      @tables[tablename]=table\r\n\r\n\r\n  adodbGetTables : (cb) =>\r\n    @connect() if not @connected\r\n    @cnn.schema 20\r\n      .then (@schema) =>  # fat for @ in promise\r\n        @tableList = @schema.map (adoRec) -> adoRec['TABLE_NAME']\r\n        # @adodbTablesReceived @tableList // cyclic will be called below - why specify separately???\r\n        # will be called after cache has been saved\r\n        cb @tableList    # cache.onRefresh + showAll!!\r\n      .catch (e) ->\r\n        console.log \"adodbGetTables Error : #{e} \"\r\n\r\n# kludge - should return a promise!! - instead using a callback!! needs to be bound\r\n  getTables : (cb) =>      #showAll     # fat - used as a static callback\r\n## use the cache\r\n    if @tables\r\n      cb @tables\r\n    else\r\n      @cacheTables.getData(cb)  #showAll\r\n\r\n  getFields : (cb) =>      #showAll     # fat - used as a static callback\r\n## use the cache\r\n    if @fields\r\n      cb @fields\r\n    else\r\n      @cacheFields.getData(cb)  #showAll\r\n\r\n  adodbFieldsReceived : (@tables) =>  # @ in promise/cb - should really use the rawFieldlist here\r\n      console.log \"why here\"\r\n  adodbGetFields : (cb) =>\r\n    @connect() if not @connected\r\n    @cnn.schema 4 # , [null,null,null]   # get ALL fields in db\r\n      .then (@schema) =>  # fat for @ in promise\r\n        tableList = @schema.map (ado)->\r\n          ado['TABLE_NAME']\r\n        @tableList = [...new Set(tableList)]  # unique tables as list\r\n        # construct the @tables\r\n        for ado in @schema\r\n          tableName = ado['TABLE_NAME']\r\n          # check if already exists\r\n          @tables={} if not @tables?\r\n          table = @addTable tableName if not @tables[tableName]?\r\n          table = @tables[tableName]\r\n          table.addField ado\r\n        cb @tables    # cache.onRefresh + showAll!!\r\n      .catch (e) ->\r\n        console.log \"adodbGetFields Error : #{e} \"\r\n\r\n# single query retuirns all fields, which give you all tables as well\r\n  xgetFields : (cb) ->\r\n    @connect() if not @connected\r\n    @db.cnn.schema 4 , [null,null,null]\r\n      .then (@schema) =>  # fat for @ in promise\r\n        for fieldObj in @schema\r\n          tableName = tableObj['TABLE_NAME']\r\n          # check if already exists\r\n          table = @addTable @ , tableName if not @tables[tableName]?\r\n          table = @tables[tableName]\r\n          table.addField fieldObj\r\n\r\n      .then ->\r\n        cb(); # TODO : cb kludge - should be promise\r\n      .catch (e) ->\r\n        console.log \"getFields Error : #{e} \"\r\n\r\n  addTable : (name) ->\r\n    table = new Table(@,name)\r\n    @tables[name] = table\r\n    table\r\n\r\nclass Table\r\n  constructor : (@db,@name) ->\r\n    @fields={}\r\n\r\n  dump : ->\r\n    console.log \"Hello from table #{@name}\"\r\n\r\n  getFields : ->\r\n    @db.cnn.schema 4 , [null,null,@name]\r\n      .then (@schema) =>  # fat for @ in promise\r\n        for column in @schema\r\n          @addField column\r\n      .catch (e) ->\r\n        console.log \"getFields Error : #{e}\"\r\n\r\n  addField : (column) ->\r\n    field = new Field @,column\r\n    @fields[field.name]=field\r\n    field\r\n\r\n  toJSON : (key) => # fat @\r\n    if key?\r\n      name : @name\r\n      fields : @fields\r\n    else\r\n      @\r\n\r\n\r\n\r\nclass Field\r\n  @types : {}\r\n  constructor : (@table,@ado) ->\r\n\r\n    try\r\n      @name = @ado['COLUMN_NAME']\r\n      @itype = @ado['DATA_TYPE']\r\n      @type = Field.types[@itype]\r\n      @ord = @ado['ORDINAL_POSITION']\r\n      @size = @ado['CHARACTER_MAXIMUM_LENGTH'] || @ado['NUMERIC_PRECISION']\r\n      @nullable = @ado['IS_NULLABLE']\r\n      @hasDefault = @ado['COLUMN_HAS_DEFAULT']\r\n      @default = @ado['COLUMN_DEFAULT']\r\n\r\n    catch e\r\n      console.log \"Field Error : #{e}\"\r\n  # static\r\n  @getTypes : ->\r\n    # invert the enums above\r\n    for value,key of adodb.typeEnum\r\n      @types[key]=value\r\n\r\n  toJSON : (key) =>\r\n    # need to remove backpointer table!!\r\n    name : @name\r\n    itype : @itype\r\n    type : @type\r\n    ord : @ord\r\n    size : @size\r\n    nullable : @nullable\r\n    hasDefault : @hasDefault\r\n    default : @default\r\n\r\n#    o={}\r\n#    for v,k of @\r\n#      o[k] = v if k not in [\"table\",\"ado\"]\r\n#    o\r\n# static call\r\nField.getTypes()\r\n\r\nmodule.exports = Db\r\n"
  ]
}