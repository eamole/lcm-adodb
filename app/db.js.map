{
  "version": 3,
  "file": "db.js",
  "sourceRoot": "",
  "sources": [
    "db.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "ADODB = require('node-adodb');\r\n\r\nclass Db\r\n  constructor : (@name,@path,@password,@ext=\".mdb\") ->\r\n    @passString = \"\"\r\n    @passString = \"Jet OLEDB:Database Password=#{@password}\" if @password?\r\n    @file = @path + @ext\r\n    @provider = 'Provider=Microsoft.ACE.OLEDB.12.0'\r\n    @tables=[];\r\n    @dataSource = \"Data Source=#{@file}\"\r\n    @connected = false;\r\n\r\n  connect : ->\r\n    cnnString = \"#{@provider};#{@dataSource};#{@passString}\"\r\n    @cnn = ADODB.open cnnString\r\n    @connected=true;\r\n\r\n  # kludge - should return a promise!! - instead using a callback!! needs to be bound\r\n  getTables : (cb) ->\r\n    @connect() if not @connected\r\n    @cnn.schema 20\r\n      .then (@schema) =>  # fat for @ in promise\r\n        for tableObj in @schema\r\n          table = @addTable tableObj['TABLE_NAME']\r\n          table.getFields()\r\n      .then ->\r\n        cb(); # TODO : cb kludge - should be promise\r\n      .catch (e) ->\r\n        console.log \"getTables Error : #{e} \"\r\n\r\n  addTable : (name) ->\r\n    table = new Table(@,name)\r\n    @tables[name] = table\r\n    table\r\n\r\nclass Table\r\n  constructor : (@db,@name) ->\r\n    @fields=[]\r\n\r\n  getFields : ->\r\n    @db.cnn.schema 4 , [null,null,@name]\r\n      .then (@schema) =>  # fat for @ in promise\r\n        for column in @schema\r\n          @addField column\r\n      .catch (e) ->\r\n        console.log \"getFields Error : #{e}\"\r\n\r\n  addField : (column) ->\r\n    field = new Field @,column\r\n    @fields[field.name]=field\r\n    field\r\n\r\n\r\nclass Field\r\n  constructor : (@table,@column) ->\r\n    try\r\n      @name = @column['COLUMN_NAME']\r\n      @itype = @column['DATA_TYPE']\r\n    catch e\r\n      console.log \"Field Error : #{e}\"\r\nmodule.exports = Db\r\n"
  ]
}